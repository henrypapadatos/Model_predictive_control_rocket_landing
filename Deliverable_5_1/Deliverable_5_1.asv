clc; clear all; close all;
warning('off', 'MATLAB:rmpath:DirNotFound');
rmpath(genpath("../Deliverable_3_1"));
rmpath(genpath("../Deliverable_3_2"));
addpath(fullfile('..', 'src'));

%% Definition of controller and parameters
Ts = 1/20; % Sample time
rocket = Rocket(Ts);
[xs, us] = rocket.trim();
sys = rocket.linearize(xs, us);
[sys_x, sys_y, sys_z, sys_roll] = rocket.decompose(sys, xs, us);

% Design MPC controller
H = 1.5; % Horizon length in seconds

% Merge four sub−system controllers into one full−system controller
mpc_x = MPC_Control_x(sys_x, Ts, H);
mpc_y = MPC_Control_y(sys_y, Ts, H);
mpc_z = MPC_Control_z(sys_z, Ts, H);
mpc_roll = MPC_Control_roll(sys_roll, Ts, H);

mpc = rocket.merge_lin_controllers(xs, us, mpc_x, mpc_y, mpc_z, mpc_roll);

% Setup reference function
Tf = 30;
ref = @(t_, x_) rocket.MPC_ref(t_, Tf);

% Uncomment if you want to have a constant reference for z
%ref = @(t_, x_) [0,0,1,0];

% Starting point 
x0 = zeros(12,1);

% Manipulate mass for simulation
rocket.mass =  1.783; 

%% Run the simulation with controller from deliverable 4
[T, X, U, Ref] = rocket.simulate_f(x0, Tf, mpc, ref);
rocket.anim_rate = 10; % Increase this to make the animation faster
ph = rocket.plotvis(T, X, U, Ref);
ph.fig.Name = 'Nonlin. sim'; % Set a figure title

saveas(ph.fig,"Graphs/offset mass + old model.svg");

%% Updated controller with offset free tracking
[T, X, U, Ref, Z_hat] = rocket.simulate_f_est_z(x0, Tf, mpc, ref, mpc_z, sys_z);
rocket.anim_rate = 10; % Increase this to make the animation faster
ph = rocket.plotvis(T, X, U, Ref);
ph.fig.Name = 'Nonlin. sim'; % Set a figure title

saveas(ph.fig,"Graphs/offset mass + new model.svg");


%% Plot the evolution of the disturbance for the real trajectory

fig = figure();
fig.Position = [100 100 1200 600];
hold on
plot(T,Z_hat(13,:))
yline(-2.76667,'--',"True disturbance");
title("Evolution of the estimation of the disturbance, poles = [0.4,0.5,0.6]");
xlabel("Time [s]")
ylabel("Disturbance")
saveas(fig,"Graphs/dist_estimation.svg")

%% Study to see how the poles were influencing the estimation of the disturbance 

load("poles_workspace.mat");
fig = figure();
fig.Position = [100 100 1400 800];
hold on
poles_1 = plot(T(1,1:120),Z_hat(13,1:120));
poles_2 = plot(T(1,1:120),Z_hat_2(13,1:120));
poles_3 = plot(T(1,1:120),Z_hat_3(13,1:120));
poles_4 = plot(T(1,1:120),Z_hat_4(13,1:120));
true_dist = yline(-2.76667,'--');
legend([poles_1,poles_2,poles_4,poles_3,true_dist],...
       ["poles = [0.01,0.02,0.03]",...
       "poles = [0.1,0.2,0.3]",...
       "poles = [0.4,0.5,0.6]",...
       "poles = [0.7,0.8,0.9]",...
       "True disturbance"])
title("Evolution of the estimated disturbance for different poles, for a movement starting from the origin and tracking a reference of z = 1m")
xlabel("Time [s]")
ylabel("Disturbance")
saveas(fig,"Graphs/pole_choice.svg")
